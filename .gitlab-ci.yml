stages:
  - dependencies
  - build
  - test
  - build-native
  - test-native
  - dockerize

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

get dependencies:
  image: quay.io/quarkus/ubi-quarkus-native-image:21.3.1-java11
  stage: dependencies
  script:
    - ./gradlew quarkusGoOffline
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - .gradle

build:
  image: quay.io/quarkus/ubi-quarkus-native-image:21.3.1-java11
  stage: build
  script:
    - ./gradlew assemble
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - .gradle
      - node
      - build
      - src/main/webapp/node_modules
      - src/main/webapp/build

test:
  image: quay.io/quarkus/ubi-quarkus-native-image:21.3.1-java11
  stage: test
  script:
    - ./gradlew check
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - .gradle
      - node
      - build
      - src/main/webapp/build

build-native:
  image:  quay.io/quarkus/ubi-quarkus-native-image:21.3.1-java11
  stage: build-native
  script:
    - ./gradlew buildNative
  artifacts:
    name: native-binary
    paths:
      - build/*-runner
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - .gradle
      - build
      - src/main/webapp/build
  variables:
    JAVA_OPTS: "-Xmx4G -Dquarkus.native.native-image-xmx=3G"

test-native:
  image:  quay.io/quarkus/ubi-quarkus-native-image:21.3.1-java11
  stage: test-native
  script:
    - ./gradlew testNative
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - .gradle
      - node
      - build
      - src/main/webapp/node_modules
      - src/main/webapp/build
  variables:
    JAVA_OPTS: "-Xmx4G -Dquarkus.native.native-image-xmx=3G"

docker-native-build:
  stage: dockerize
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - ls -al build/*
    - >
      /kaniko/executor
      --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/src/main/docker/Dockerfile.native-micro
      --destination $CI_REGISTRY_IMAGE:$TAG
      --cache=true
  cache: {}
