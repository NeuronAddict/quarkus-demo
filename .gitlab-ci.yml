variables:
  JAVA_IMAGE: quay.io/quarkus/ubi-quarkus-native-image:21.3-java17

stages:
  - dependencies
  - build
  - test
  - build-native
  - test-native
  - dockerize

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

get dependencies:
  image: $JAVA_IMAGE
  stage: dependencies
  script:
    - ./gradlew quarkusGoOffline
  cache:
    - key: "$CI_COMMIT_REF_SLUG"
      paths:
        - .gradle

build:
  image: $JAVA_IMAGE
  stage: build
  script:
    - ./gradlew quarkusBuild
  artifacts:
    name: jar
    paths:
      - build/quarkus-app
      - build/libs
  cache:
    - key: "$CI_COMMIT_REF_SLUG"
      paths:
        - .gradle
        - node
        - build

build frontend:
  image: registry.access.redhat.com/ubi8/openjdk-17:1.12-1
  stage: build
  script:
    - ./gradlew assembleFrontend
  artifacts:
    name: frontend
    paths:
      - src/main/resources/META-INF/resources
  cache:
    - key: "$CI_COMMIT_REF_SLUG"
      paths:
        - .gradle
        - node
        - build
      policy: pull

test:
  image: $JAVA_IMAGE
  stage: test
  script:
    - ls -al src/main/resources/*
    - ./gradlew check
  cache:
    - key: "$CI_COMMIT_REF_SLUG"
      paths:
        - .gradle
        - node
        - build

build-native:
  image:  $JAVA_IMAGE
  stage: build-native
  script:
    - ./gradlew quarkusBuild -Dquarkus.package.type=native
  artifacts:
    name: native-binary
    paths:
      - build/*-runner
  cache:
    - key: "$CI_COMMIT_REF_SLUG"
      paths:
        - .gradle
        - build
  variables:
    JAVA_OPTS: "-Xmx4G -Dquarkus.native.native-image-xmx=3500M"

test-native:
  image: $JAVA_IMAGE
  stage: test-native
  script:
    - ls -al build/*
    - ./gradlew testNative -Dquarkus.native.reuse-existing=true
  cache:
    - key: "$CI_COMMIT_REF_SLUG"
      paths:
        - .gradle
        - build
      policy: pull
  variables:
    JAVA_OPTS: "-Xmx4G -Dquarkus.native.native-image-xmx=3500M"

docker-native-build:
  stage: dockerize
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/src/main/docker/Dockerfile.native-micro
      --destination $CI_REGISTRY_IMAGE:$TAG
      --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
      --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
      --cache=true
  cache: {}
